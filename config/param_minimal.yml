# GPU
iGPU : 3

# set mode: 'training', 'prediction', 'plotting'
sMode : 'training'

# Datasets
sDatabase : 'MRPhysics'
# selected artifact type: e.g. 'sPairsMotion'
sSelectedArtifact : ['sPairsMotion']
# selected datasets: either e.g. ['HeadT1', 'AbdomenT1'] or ['All']
sSelectedDataset : ['HeadT1', 'AbdomenT1', 'PelvisT1']
# selected patients: either array with numbers of patients to be used [1,2,6] or ['All']
# variable states all patients (training, validation, test)
sSelectedPatient : [1,5]

MRPhysics:
  sPathIn : "/med_data/ImageSimilarity/Databases/MRPhysics/newProtocol"
  sSubDir : "dicom_sorted"
  # first entry is always reference, 2nd entry is artifact-affected one
  sPairsMotion:
      HeadT1: ["t1_tse_tra_Kopf_0002", "t1_tse_tra_Kopf_Motion_0003"]
      AbdomenT1: ["t1_tse_tra_fs_mbh_Leber_0004", "t1_tse_tra_fs_mbh_Leber_Motion_0005"]
      AbdomenT2: ["t2_tse_tra_fs_navi_Leber_0006", "t2_tse_tra_fs_navi_Leber_Motion_0013"]
      PelvisT1: ["t1_tse_tra_fs_Becken_0008", "t1_tse_tra_fs_Becken_Motion_0010"]
      PelvisT2: ["t2_tse_tra_fs_Becken_0009", "t2_tse_tra_fs_Becken_Motion_0011"]
  sPairsShim:
      AbdomenT2: ["t2_tse_tra_fs_navi_Leber_0006", "t2_tse_tra_fs_navi_Leber_Shim_xz_0007"]
      PelvisT2: ["t2_tse_tra_fs_Becken_0009", "t2_tse_tra_fs_Becken_Shim_xz_0012"]
  MappingData: # map extra meta information into datasets [path labels (if separate file), type of artifact, body region, contrast weighting]
      t1_tse_tra_Kopf_0002 : [None, 'ref', 'head', 't1']
      t1_tse_tra_Kopf_Motion_0003 : [None, 'motion', 'head', 't1']
      t1_tse_tra_fs_mbh_Leber_0004 : [None, 'ref', 'abdomen', 't1']
      t1_tse_tra_fs_mbh_Leber_Motion_0005 : [None, 'motion', 'abdomen', 't1' ]
      t2_tse_tra_fs_navi_Leber_0006 : [None, 'ref', 'abdomen', 't2']
      t2_tse_tra_fs_navi_Leber_Motion_0013 : [None, 'motion', 'abdomen', 't2']
      t1_tse_tra_fs_Becken_0008 : [None, 'ref', 'pelvis', 't1']
      t1_tse_tra_fs_Becken_Motion_0010 : [None, 'motion', 'pelvis', 't1']
      t2_tse_tra_fs_Becken_0009 : [None, 'ref', 'pelvis', 't2']
      t2_tse_tra_fs_Becken_Motion_0011 : [None, 'motion', 'pelvis', 't2']
      t2_tse_tra_fs_navi_Leber_0006 : [None, 'ref', 'abdomen', 't2']
      t2_tse_tra_fs_navi_Leber_Shim_xz_0007 : [None, 'shim', 'abdomen', 't2']
      t2_tse_tra_fs_Becken_0009 : [None, 'ref', 'pelvis', 't2']
      t2_tse_tra_fs_Becken_Shim_xz_0012 : [None, 'shim', 'pelvis', 't2']
  # all classes are marked in JSON file with: 0=no artifact, 1=motion, 2=shim, (-1=unknown artifact)
  sPathInLabel: "/med_data/ImageSimilarity/Databases/MRPhysics/Paper_Markings"

NAKO_IQA:
  sPathIn: "/med_data/ImageSimilarity/Databases/NAKO_IQA"
  sSubDir: "dicom_sorted"
  sPairsMotion:
    WBFBT1: ["3D_GRE_TRA_bh_F_COMPOSED_0014", "3D_GRE_TRA_fb_F_COMPOSED_0028"]
    WBDBT1: ["3D_GRE_TRA_bh_F_COMPOSED_0014", "3D_GRE_TRA_fb_deep_F_COMPOSED_0042"]
  MappingData:
    3D_GRE_TRA_bh_F_COMPOSED_0014 : [None, 'ref', 'abdomen', 't1']
    3D_GRE_TRA_fb_F_COMPOSED_0028 : [None, 'motion', 'abdomen', 't1']
    3D_GRE_TRA_fb_deep_F_COMPOSED_0042 : [None, 'motion', 'abdomen', 't1']
  sPathInLabel: "/med_data/ImageSimilarity/Databases/NAKO_IQA_Label"

# store mode of data after/during/before patching
# 'STORE_DISABLED', 'STORE_HDF5', 'STORE_TFRECORD', 'STORE_PATCH_BASED',
storeMode : 'STORE_HDF5'

# plot results
plotting:
  plotResults: True
  format : png        # data format of stored file
  alpha: 0.4          # transparency of labels/prediction-masks on MRI
  colormap: [[0, 1, 0], [1, 1, 0], [1, 0, 0]] # colormap of overlays, green -> yellow -> red
  savePlotMat: False # save pre-processed test outcomes as separate mat file

# scaling range
range : [0, 1]
# patches
patchSize : [64, 64, 16] # [x, y] or [x,y,z], but z should not larger than 10, else too much zero-padding when scaling factor is small
patchOverlap : 0.8 # 50%
# sLabeling strategy
# 'volume': volume-wise labeling
# 'patch': patch-wise labeling
# 'local': voxel-wise labeling
sLabeling : "local"
# patching strategy
# 'rigidPatching' or'adaptivePatching':
sPatching : "rigidPatching"
# splitting strategy
# 'random': percentage splitting
# 'crossvalidation_data': random with cross validation on data -> use "nfolds" value
# 'crossvalidation_patient': cross validation on patient (leave one-N patient out) -> not using "nfolds" value
sSplitting : "crossvalidation_patient"
# splitting in train/test subjects
# if crossvalidation_patient: specify number of patient
# if random: specify a percentage ratio
trainTestDatasetRatio : [16]  # use subject 16
# ratio between training and validation patches (percentage ratio of validation set size)
trainValidationRatio : 0
# random shuffling of patches during training -> improves stability
randomShuffle : True
# number of cross-validation folds (0 = no cross-val -> only 1 run)
nfolds : 0

# network architecture (if existing for chosen database!)
# see *.py files in subfolders of "./networks"
# naming convention: artifactType_bodyRegion_network OR artifactType_network
# artifactType: motion, multiclass
# bodyRegion: abd, head, all
# network: CNN2D, CNN3D, MNetArt, VNetArt
# Single-pathway Multiscale networks are: MS_SPP, MS_FCN_simple, MS_FCN_MultiFM, MS_Inception_Archi1, MS_Inception_Archi2
# Dual-pathway Multiscale networks are: MS_VNet_MultiPath, MS_SPP_MultiPath, MS_FCN_MultiFM_MultiPath
network : "VResFCN_3D_Upsampling_final_Motion_Binary"
# use classification output on deepest layer
usingClassification : True
# optimized parameters
batchSize : 64
# learning rate
learningRate : 0.001
# amount of epochs
epochs : 100
# optimizer and associated parameters
optimizer :
  # algos: 'SGD', 'RMSPROP', 'ADAGRAD', 'ADADELTA', 'ADAM'
  algorithm : 'ADAM'
  momentum : 0.9
  weightdecay : 0.0001
  nesterov : True

# data augmentation
dataAugmentation:
  featurewise_center : False
  samplewise_center : False
  featurewise_std_normalization : False
  samplewise_std_normalization : False
  zca_whitening : False
  zca_epsilon : 1e-6
  rotation_range : 0.
  width_shift_range : 0.
  height_shift_range : 0.
  shear_range : 0.
  zoom_range : 0.
  channel_shift_range : 0.
  fill_mode : 'constant'
  cval : 0.
  horizontal_flip : False
  vertical_flip : False
  rescale : False
  histogram_equalization : False
  contrast_stretching : False
  adaptive_equalization : False

# paths
# output path
sOutputPath : '/home/s1304/no_backup/s1304/output/tmp/'
# path to trained model and weights (same name, just file extension will be different -> handled automatically)
sSaveModel : '/home/s1304/no_backup/s1304/output/tmp/VResFCN_3D_Upsampling_final_Motion_Binary_3D_64x64x16_2019-07-31_17-22/VResFCN_3D_Upsampling_final_Motion_Binary_3D_64x64x16_2019-07-31_17-22.json'
# stored mat file with test results: if empty, script automatically determines the default path based on sOutPath
sTestFile: '/home/s1304/no_backup/s1304/output/tmp/VResFCN_3D_Upsampling_final_Motion_Binary_3D_64x64x16_2019-07-31_17-22/VResFCN_3D_Upsampling_final_Motion_Binary_3D_64x64x16_2019-07-31_17-22.mat'
